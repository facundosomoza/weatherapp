{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\OneDrive\\\\Escritorio\\\\React Linkedin\\\\weather\\\\react\\\\src\\\\SearchWeather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WeatherCity from \"./WeatherCity\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchWeather = _ref => {\n  _s();\n\n  let {\n    removeGeoInfo,\n    showSearchResult,\n    onSearch,\n    onReset\n  } = _ref;\n  const [cityName, setCityName] = useState(\"\");\n  const [dataCity, setDataCity] = useState([]);\n  const [showReset, setShowReset] = useState(false);\n  const [showDemo, setShowDemo] = useState(false);\n  const API_KEY = \"3d3b9b32aebc72e5e766753be6d6e4d5\";\n\n  function getLocation() {\n    const url = `https://api.openweathermap.org/data/2.5/find?q=${cityName}&appid=${API_KEY}`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setDataCity(data.list);\n    });\n  }\n\n  const handleInput = event => {\n    setCityName(event.target.value);\n  };\n\n  const handleButton = () => {\n    if (cityName.trim() === \"\") {\n      Swal.fire({\n        icon: \"error\",\n        text: \"You must enter the name of the city you want\"\n      });\n    } else {\n      getLocation();\n      onSearch();\n      setShowReset(true);\n    }\n\n    setCityName(\"\");\n  };\n\n  const showWeatherData = () => {\n    return showSearchResult ? dataCity.map(city => /*#__PURE__*/_jsxDEV(WeatherCity, {\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 30\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const handleReset = () => {\n    onReset();\n    setShowReset(false);\n  };\n\n  const getShowResetButton = () => {\n    return showReset ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"info\",\n      className: \"ml-2\",\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const showButtonDemo = () => showDemo ? /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"Demo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 44\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          onChange: handleInput,\n          value: cityName,\n          placeholder: \"Enter City Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleButton,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), getShowResetButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [showWeatherData(), showButtonDemo()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchWeather, \"lCst59E0pLNGlX11fUuFhY07Q7A=\");\n\n_c = SearchWeather;\nexport default SearchWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchWeather\");","map":{"version":3,"names":["React","useState","WeatherCity","Button","Col","Row","Container","Swal","SearchWeather","removeGeoInfo","showSearchResult","onSearch","onReset","cityName","setCityName","dataCity","setDataCity","showReset","setShowReset","showDemo","setShowDemo","API_KEY","getLocation","url","fetch","then","response","json","data","console","log","list","handleInput","event","target","value","handleButton","trim","fire","icon","text","showWeatherData","map","city","handleReset","getShowResetButton","showButtonDemo"],"sources":["C:/Users/eduar/OneDrive/Escritorio/React Linkedin/weather/react/src/SearchWeather.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport WeatherCity from \"./WeatherCity\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst SearchWeather = ({\r\n  removeGeoInfo,\r\n  showSearchResult,\r\n  onSearch,\r\n  onReset,\r\n}) => {\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [dataCity, setDataCity] = useState([]);\r\n  const [showReset, setShowReset] = useState(false);\r\n\r\n  const [showDemo, setShowDemo] = useState(false);\r\n\r\n  const API_KEY = \"3d3b9b32aebc72e5e766753be6d6e4d5\";\r\n\r\n  function getLocation() {\r\n    const url = `https://api.openweathermap.org/data/2.5/find?q=${cityName}&appid=${API_KEY}`;\r\n\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setDataCity(data.list);\r\n      });\r\n  }\r\n\r\n  const handleInput = (event) => {\r\n    setCityName(event.target.value);\r\n  };\r\n\r\n  const handleButton = () => {\r\n    if (cityName.trim() === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        text: \"You must enter the name of the city you want\",\r\n      });\r\n    } else {\r\n      getLocation();\r\n      onSearch();\r\n      setShowReset(true);\r\n    }\r\n\r\n    setCityName(\"\");\r\n  };\r\n\r\n  const showWeatherData = () => {\r\n    return showSearchResult ? (\r\n      dataCity.map((city) => <WeatherCity city={city}></WeatherCity>)\r\n    ) : (\r\n      <></>\r\n    );\r\n  };\r\n\r\n  const handleReset = () => {\r\n    onReset();\r\n    setShowReset(false);\r\n  };\r\n\r\n  const getShowResetButton = () => {\r\n    return showReset ? (\r\n      <Button variant=\"info\" className=\"ml-2\" onClick={handleReset}>\r\n        Reset\r\n      </Button>\r\n    ) : (\r\n      <></>\r\n    );\r\n  };\r\n\r\n  const showButtonDemo = () => (showDemo ? <button>Demo</button> : <></>);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Weather App</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Col md={4}>\r\n          <input\r\n            className=\"form-control\"\r\n            onChange={handleInput}\r\n            value={cityName}\r\n            placeholder=\"Enter City Name\"\r\n          ></input>\r\n        </Col>\r\n        <Col>\r\n          <Button variant=\"info\" onClick={handleButton}>\r\n            Search\r\n          </Button>\r\n          {getShowResetButton()}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {showWeatherData()}\r\n          {showButtonDemo()}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchWeather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}